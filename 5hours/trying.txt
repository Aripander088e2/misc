How about just the original idea?

integral from 0 to t of 2^(integral from 0 to y of 2^(x / 3600)dx / 300)dy

reframe 2^x as e^(ln(2)x)

integral from 0 to t of e^(ln(2) * integral from 0 to y of e^(ln(2) * x / 3600)dx / 300)dy

integral from 0 to t of e^(ln(2) / 300 * integral from 0 to y of e^(ln(2) / 3600 * x)dx)dy

e^(cx) -> integral -> e^(cx) / c

integral from 0 to t of e^(ln(2) / 300 * (e^(ln(2) / 3600 * y) - 1))dy

which doesn't really exist, ugh. let's try something we can actually calculate.

using:

600 * (e ** (6 * (e ** (x / 3600) - 1) / c) - 1)

no, make some annoying timewall for rewards to multiply by 1.5.
How about the rewards get stronger (from 1 to 1.5) at a rate of initially
a day to cap, but there's a fifth bar which makes that go twice as quick
for every 30 minutes (so at 3:00:00 it's possible, at 5:00:00 it's less
than 2 minutes)

development, efficiency, refactoring, recruitment, patience

Also, multiply production by (reached milestones + 1) (milestone every 30 minutes)

prestige works like progress; it's added just as progress is added to other progress.

I'd like to have lategame stuff, patience stuff, and headstart stuff.
base patience effect after 00:01:00 is nerfed: 1m / (1 + ln(1m / x))

update gain: floor(2 ** (hours - 5))

lategame updates produce production multiplier, 0.01/second, 0 initially (sqrt(x + 1))

patience updates produce patience gain multiplier, 0.01/second, 0 initially (log2(x + 2))

headstart updates produce dev gain multiplier, 0.01/second, 0 initially (log2(x + 2))

there's no cancellation

Let's at first say double-exponential cost scaling means 10, 100, 1e4, etc.

possible upgrades:

Scaling is reduced after 4:30:00.
(replace the Math.exp(x / 3600) by Math.min(Math.exp(x / 3600), Math.pow(x / 3600, 3)))

Efficiency is slightly boosted.
(after buying)
Efficiency is slightly boosted.
x ** (1 + 0.2 * bought) ** 0.5, exponential cost scaling
(the ** 0.5 stops it from being definitively OP, and it also affects meta-efficiency)

Efficiency affects the patience meter with reduced effect.
(after buying)
Efficiency affects the patience meter more strongly.
max(1, log2(max(1, log2(x)))) ** ((1 + bought) / 2), double-exponential cost scaling
(the double log2 is less strong than it might seem (1 million still goes to a value above 4),
but it's not strong enough to destabilize everything (I think))
Probably just start with updates and no upgrades, then see how far you can get,
then add the initial OP upgrades, then see how far you can get with those.
----
Patience is more powerful.
(replace the 2 by 2.5, and 1:00 by 10 seconds)

After reaching 1, the patience meter keeps going, but with reduced effect.
(after buying)
The patience meter's effect after reaching 1 is increased.
x -> 1 + bought * Math.log(x) / 5, exponential cost scaling

You start with 2 times enlightened, which do not affect patience gain speed.
(after buying)
You start with {new bought + 1} times enlightened, which do not affect patience gain speed.
1 + bought times, double-exponential cost scaling
----
You start with 10 devs rather than 1.

You start with 30 minutes of meta-efficiency and meta-refactoring.
(after buying)
You start with {new bought * 30 minutes} minutes of meta-efficiency and meta-refactoring.
bought * 30 minutes, exponential cost scaling

You start with 0.1x of the dev gain from your farthest-ever recruitment.
You start with {0.1 * 2 ** new bought}x of the dev gain from your farthest-ever recruitment.
0.1 * 2 ** new bought, double-exponential cost scaling
(this doesn't need double-exponential cost scaling but it has it for consistency)

eyJwcm9ncmVzcyI6WzAsMCwwLDAsMCwwLDAsMC4wMDAxNTU0OTc2ODUxODUxODUxXSwiZGV2cyI6WzAsMCwwLDAsMCwwLDAsMF0sIm1pbGVzdG9uZXMiOjAsImVubGlnaHRlbmVkIjowLCJsYXN0VXBkYXRlIjoxNTU0MTM5NTM4MzM3LCJ1cGRhdGVQb2ludHMiOjEsInVwZGF0ZXMiOjEsImV4cGVyaWVuY2UiOlswLDAsMF0sInBvd2VyIjpbMCwwLDAsMF19

just before update:
eyJwcm9ncmVzcyI6WzE3ODM4Ljg0MzkxNjE0NjY4LDE3NDA0Ljk5NDkzNTMyMDI2NSwxNzQwMy40NDMyMTg4ODI0OSwxNzQxMy4zMzU1NDY0MTcyMywxNzIyNC4yMDY3MzUyMDUxMSwxNjc2MS4wOTAwOTg0NTQ1NjIsMTU1NzEuNjIzNDAwMTE2NjIzLDFdLCJkZXZzIjpbNTksMCwwLDAsMF0sIm1pbGVzdG9uZXMiOjksImVubGlnaHRlbmVkIjoyLCJsYXN0VXBkYXRlIjoxNTU0MTM5ODc0Nzg0fQ==

Something where all devs work on the update with half effectiveness would be nice, along with dev auto-assign
(those could all be part of the initial-10-devs first headstart upgrade, but those three things should be split up IMO into two upgrades)
Scaling is reduced after 4:30:00
Patience is more powerful.
(replace the 2 by 2.5, and 1:00 by 10 seconds)
Initial 10 devs + dev auto-assign
Maybe each type has a rather weak non-repeatable?
Endgame power boosts upgrade point formula. (2 -> 2 + log2(x + 2) / 10)
After reaching 1, the patience meter keeps going, but with reduced effect.
(x -> 1 + ln(x) / 10)
All devs also work on development, whatever they're assigned to.

Patience needs to have auto-enlightned at some point.

Hm, I just noticed that power is all lost on update. That might seem weird, but I think I'll keep it.

Ideally, after 30 prestiges and 10 experience of each kind, prestiges take 10 minutes.

But at that point you're getting about 0.3 power/sec, so after 300 secs you have roughly 100 power of each kind.

That gives a 60x mult to production, and a 6x mult to patience meter.

The 60x mult to production makes it take about 3 minutes to get to 3:00:00,
at that point the idea of 7 more minutes for update seems reasonable (but testing will be needed).

So, 10 is probably a reasonable cost, but who knows?

1e6 (3):

endgame: Efficiency and meta-efficiency multiplier exponents are raised ^1.05.

patience: Prestige meter grows faster based on updates.
[logarithmic]

headstart: Meta-efficiency and meta-refactoring autobuyer, enlightenment autobuyer, update autobuyer.

1e8? (4):

endgame: Each milestone gives a 1.2x multiplier to all production.

patience: Patience meter grows faster based on milestones.
[sqrt(1 + x)]

headstart: You keep your milestones on update.

eyJwcm9ncmVzcyI6WzAsMCwwLDEwNzcuNjY2ODA2ODIyMzczMiwwLDAsMjIzNC41NjEyMTE1ODkyOTQsMC4wMjc4MzU5MTEzMDI1OTA2Nl0sImRldnMiOlswLDAsMCw0LDAsMCwwLDBdLCJtaWxlc3RvbmVzIjoxLCJlbmxpZ2h0ZW5lZCI6MCwibGFzdFVwZGF0ZSI6MTU1NDE0NjE3ODgxNSwidXBkYXRlUG9pbnRzIjowLCJ1cGRhdGVzIjoxLCJleHBlcmllbmNlIjpbMCwxLDBdLCJwb3dlciI6WzAsMzguODY5MTU5OTk5OTczMjQsMCwwXX0=

eyJwcm9ncmVzcyI6WzAsMCwyNDEuNDQ2Mzk3MzAwMTE3MjcsMzM1LjUyNDgzMDUxMzI5ODM1LDAsMCwwLDAuMDA4Mjk1ODYyNTM2ODExOTVdLCJkZXZzIjpbMCwwLDIsMCwwLDAsMCwwXSwibWlsZXN0b25lcyI6MCwiZW5saWdodGVuZWQiOjAsImxhc3RVcGRhdGUiOjE1NTQyMjc5OTcwNjQsInVwZGF0ZVBvaW50cyI6MCwidXBkYXRlcyI6MiwiZXhwZXJpZW5jZSI6WzEsMSwwXSwicG93ZXIiOls2LjI1NTM1OTk5OTk5OTM2Nyw2LjMyNzYzOTk5OTk5OTM1NiwwLDBdLCJ1cGdyYWRlcyI6W1tmYWxzZSxmYWxzZSxmYWxzZV0sW2ZhbHNlLGZhbHNlLGZhbHNlXV0sImF1dG8iOnsiZGV2Ijp7InNldHRpbmdzIjpbMCwwLDAsMCwwXSwib24iOmZhbHNlfX0sIm9wdGlvbnMiOnsiY29uZmlybWF0aW9ucyI6eyJwcmVzdGlnZSI6ZmFsc2UsInByZXN0aWdlV2l0aG91dEdhaW4iOnRydWUsInVwZGF0ZSI6ZmFsc2V9fX0=

eyJwcm9ncmVzcyI6WzAsMCwwLDAsMCwwLDM2NjkuNjE1NTMyNTYwOTA5NywwLjAwMDE0MzcwNDYwNDU5MzMyNzc3XSwiZGV2cyI6WzAsMCwwLDAsMCwwLDAsMF0sIm1pbGVzdG9uZXMiOjIsImVubGlnaHRlbmVkIjowLCJsYXN0VXBkYXRlIjoxNTU0MjMzMjM5ODY5LCJ1cGRhdGVQb2ludHMiOjAsInVwZGF0ZXMiOjQsImV4cGVyaWVuY2UiOlsyLDEsMV0sInBvd2VyIjpbMzguOTk0NDgwMDAwMDAwNzYsMTkuNTkyMTAwMDAwMDAwMzUsMTkuNTkyMTAwMDAwMDAwMzUsMF0sInVwZ3JhZGVzIjpbW2ZhbHNlLGZhbHNlLGZhbHNlXSxbZmFsc2UsZmFsc2UsZmFsc2VdXSwiYXV0byI6eyJkZXYiOnsic2V0dGluZ3MiOlswLDAsMCwwLDBdLCJvbiI6ZmFsc2V9fSwib3B0aW9ucyI6eyJjb25maXJtYXRpb25zIjp7InByZXN0aWdlIjpmYWxzZSwicHJlc3RpZ2VXaXRob3V0R2FpbiI6dHJ1ZSwidXBkYXRlIjpmYWxzZX19fQ==

eyJwcm9ncmVzcyI6WzAsMCwwLDAsMCwwLDI4ODIuODYwNjMyNzA0MjQ4LDAuMDAwMTYzNjQ4OTQ5NDYwOTI5XSwiZGV2cyI6WzAsMCwwLDAsMCwwLDAsMF0sIm1pbGVzdG9uZXMiOjEsImVubGlnaHRlbmVkIjowLCJsYXN0VXBkYXRlIjoxNTU0MjM3NDI1NjMwLCJ1cGRhdGVQb2ludHMiOjAsInVwZGF0ZXMiOjcsImV4cGVyaWVuY2UiOls1LDEsMV0sInBvd2VyIjpbODIuMjc4MDA1OTI1MDUyMywxNi40Njc5OTAzMTc5MjYwNzcsMTYuNDY3OTkwMzE3OTI2MDc3LDBdLCJ1cGdyYWRlcyI6W1tmYWxzZSxmYWxzZSxmYWxzZV0sW2ZhbHNlLGZhbHNlLGZhbHNlXV0sImF1dG8iOnsiZGV2Ijp7InNldHRpbmdzIjpbMCwwLDAsMCwwXSwib24iOmZhbHNlfX0sIm9wdGlvbnMiOnsiY29uZmlybWF0aW9ucyI6eyJwcmVzdGlnZSI6ZmFsc2UsInByZXN0aWdlV2l0aG91dEdhaW4iOnRydWUsInVwZGF0ZSI6ZmFsc2V9fX0=

eyJwcm9ncmVzcyI6Wzc4Ny43NjI4Nzk4OTIyODcxLDc4Ny43NjI4Nzk4OTIyODcxLDc4Ny43NjI4Nzk4OTIyODcxLDc4Ny43NjI4Nzk4OTIyODcxLDc4Ny43NjI4Nzk4OTIyODcxLDAsMCwwLjAwNzAwMzYzODY0NDQ2NzM3OV0sImRldnMiOls1LDUsNSw1LDUsMCwwLDBdLCJtaWxlc3RvbmVzIjowLCJlbmxpZ2h0ZW5lZCI6MCwibGFzdFVwZGF0ZSI6MTU1NDMzOTkwNzE5NywidXBkYXRlUG9pbnRzIjowLCJ1cGRhdGVzIjoxMSwiZXhwZXJpZW5jZSI6WzIsMywxMl0sInBvd2VyIjpbMTMuNDYyMDQyOTgxNzA5Mzk5LDIwLjE5MzA2NDQ3MjU2NDg0Niw3NS45NTY2MDY4NzM5MjUzNSwwXSwidXBncmFkZXMiOltbdHJ1ZSx0cnVlLHRydWVdLFtmYWxzZSxmYWxzZSxmYWxzZV1dLCJhdXRvIjp7ImRldiI6eyJzZXR0aW5ncyI6WzAuMiwwLjIsMC4yLDAuMiwwLjJdLCJvbiI6dHJ1ZX19LCJvcHRpb25zIjp7ImNvbmZpcm1hdGlvbnMiOnsicHJlc3RpZ2UiOmZhbHNlLCJwcmVzdGlnZVdpdGhvdXRHYWluIjp0cnVlLCJ1cGRhdGUiOmZhbHNlfX19

eyJwcm9ncmVzcyI6WzUxMTguMDY5Mjk0ODk3MTM1LDUxMTguMDY5Mjk0ODk3MTM1LDUxMTguMDY5Mjk0ODk3MTM1LDUxMTguMDY5Mjk0ODk3MTM1LDUxMTguMDY5Mjk0ODk3MTM1LDAsMCwwLjAwOTI4ODM2MzU1NjA4MzE4NF0sImRldnMiOls0MCw0MCw0MCw0MCw0MCwwLDAsMF0sIm1pbGVzdG9uZXMiOjIsImVubGlnaHRlbmVkIjowLCJsYXN0VXBkYXRlIjoxNTU0MzQ1ODY5MzQ1LCJ1cGRhdGVQb2ludHMiOjAsInVwZGF0ZXMiOjE1LCJleHBlcmllbmNlIjpbNzQwLDEzNSwxNDAwXSwicG93ZXIiOlsxMzMyLjI1MDIzODA1MTI4NywyNDMuMDQ1NjUxNTM2MzgyODIsMjQ0MC45MjM2OTgxMDY3NjEsMF0sInVwZ3JhZGVzIjpbW3RydWUsdHJ1ZSx0cnVlXSxbZmFsc2UsZmFsc2UsZmFsc2VdXSwiYXV0byI6eyJkZXYiOnsic2V0dGluZ3MiOlswLjIsMC4yLDAuMiwwLjIsMC4yXSwib24iOnRydWV9fSwib3B0aW9ucyI6eyJjb25maXJtYXRpb25zIjp7InByZXN0aWdlIjpmYWxzZSwicHJlc3RpZ2VXaXRob3V0R2FpbiI6dHJ1ZSwidXBkYXRlIjpmYWxzZX19fQ==

btoa(JSON.stringify(x = JSON.parse(atob("")), x.lastUpdate = Date.now(), x))

eyJwcm9ncmVzcyI6WzM2ODYzLjk1MjcyNDU5MjI2NSwzNjg2My45NTI3MjQ1OTIyNjUsMzY4NjMuOTUyNzI0NTkyMjY1LDM2ODYzLjk1MjcyNDU5MjI2NSwzNjg2My45NTI3MjQ1OTIyNjUsNDQwNDMuOTQ0MzE2NDg5NjIsNDcxNTAuMDM4NDY4ODg4NzMsMV0sImRldnMiOlszNzcsMzc3LDM3NywzNzcsMzc3LDAsMCwwXSwibWlsZXN0b25lcyI6MjYsImVubGlnaHRlbmVkIjowLCJsYXN0VXBkYXRlIjoxNTU0NDEwNzUxNzgzLCJ1cGRhdGVQb2ludHMiOjAsInVwZGF0ZXMiOjE2LCJleHBlcmllbmNlIjpbNzU4MywxMzUsMTQwMF0sInBvd2VyIjpbMjIzMDYyLjYyMzM5OTk5NjU1LDM4OTMuMDM1NTAwMDAwNDkwNiw0MDM3Mi4yMjAwMDAwMDAwMSwwXSwidXBncmFkZXMiOltbdHJ1ZSx0cnVlLHRydWVdLFt0cnVlLGZhbHNlLGZhbHNlXV0sImF1dG8iOnsiZGV2Ijp7InNldHRpbmdzIjpbMC4yLDAuMiwwLjIsMC4yLDAuMl0sIm9uIjp0cnVlfX0sIm9wdGlvbnMiOnsiY29uZmlybWF0aW9ucyI6eyJwcmVzdGlnZSI6ZmFsc2UsInByZXN0aWdlV2l0aG91dEdhaW4iOnRydWUsInVwZGF0ZSI6ZmFsc2V9fX0=

eyJwcm9ncmVzcyI6Wzk0NjU2LjU2NDk5MDM4ODE2LDk0MzY5LjYxNjgwMjk0MjY2LDk0MzY5LjYxNjgwMjk0MjY2LDk0MzY5LjYxNjgwMjk0MjY2LDk0MzY5LjYxNjgwMjk0MjY2LDg0NTczLjc4NjM1NTkzOTIzLDgwNTAzLjE5MzI5NzMwNjc2LDQ2LjY5NjA3Njc3MDkwODY0XSwiZGV2cyI6WzAsMTg0NiwxODQ2LDE4NDYsMTg0NiwwLDAsMF0sIm1pbGVzdG9uZXMiOjUyLCJlbmxpZ2h0ZW5lZCI6MTAsImxhc3RVcGRhdGUiOjE1NTQ0MjA1ODEyNzYsInVwZGF0ZVBvaW50cyI6MCwidXBkYXRlcyI6MjAsImV4cGVyaWVuY2UiOlsxMzk0NTU4LDY3ODI4MTIsMTMyOTg3XSwicG93ZXIiOlsxMTk1OTc4MDkuOTg2NzY0Niw1ODA3NTAwNDcuNTQ2MTg0MiwxMTQwNTAxNC4zMTc2MDA0MiwwXSwidXBncmFkZXMiOltbdHJ1ZSx0cnVlLHRydWVdLFt0cnVlLHRydWUsdHJ1ZV1dLCJhdXRvIjp7ImRldiI6eyJzZXR0aW5ncyI6WzAsMC4yNSwwLjI1LDAuMjUsMC4yNV0sIm9uIjp0cnVlfX0sIm9wdGlvbnMiOnsiY29uZmlybWF0aW9ucyI6eyJwcmVzdGlnZSI6ZmFsc2UsInByZXN0aWdlV2l0aG91dEdhaW4iOnRydWUsInVwZGF0ZSI6ZmFsc2V9fX0=

eyJwcm9ncmVzcyI6Wzk4NzM5Ljg3NjkxODkwMDkyLDk4NDU1Ljc3NjExMTk1OTE5LDk4NDU1Ljc3NjExMTk1OTE5LDk4NDU1Ljc3NjExMTk1OTE5LDk4NDU1Ljc3NjExMTk1OTE5LDg0NTczLjc4NjM1NTkzOTIzLDgwNTAzLjE5MzI5NzMwNjc2LDk3LjY4MzA3MzMyMzIxNzA2XSwiZGV2cyI6WzAsMTk1NCwxOTU0LDE5NTQsMTk1NCwwLDAsMF0sIm1pbGVzdG9uZXMiOjU0LCJlbmxpZ2h0ZW5lZCI6MTAsImxhc3RVcGRhdGUiOjE1NTQ0MjEwMTQ2NTMsInVwZGF0ZVBvaW50cyI6MCwidXBkYXRlcyI6MjAsImV4cGVyaWVuY2UiOlsxMzk0NTU4LDY3ODI4MTIsMTMyOTg3XSwicG93ZXIiOlsxNTE3NjE5MTIuODc5NDM1Myw3MzcxODg5MDcuMDc3MDk3OSwxNDQ3MjIyOC4xMjM5NzI0OSwwXSwidXBncmFkZXMiOltbdHJ1ZSx0cnVlLHRydWVdLFt0cnVlLHRydWUsdHJ1ZV1dLCJhdXRvIjp7ImRldiI6eyJzZXR0aW5ncyI6WzAsMC4yNSwwLjI1LDAuMjUsMC4yNV0sIm9uIjp0cnVlfX0sIm9wdGlvbnMiOnsiY29uZmlybWF0aW9ucyI6eyJwcmVzdGlnZSI6ZmFsc2UsInByZXN0aWdlV2l0aG91dEdhaW4iOnRydWUsInVwZGF0ZSI6ZmFsc2V9fX0=
